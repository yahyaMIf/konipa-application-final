const bcrypt = require('bcryptjs');
const { sequelize } = require('./config/database');
const User = require('./models/User');

async function updateAdminPassword() {
    try {
        console.log('üîÑ Mise √† jour du mot de passe admin...');

        // G√©n√©rer un nouveau hash pour admin123
        const newPassword = 'admin123';
        const hashedPassword = await bcrypt.hash(newPassword, 10);
        console.log('üîê Nouveau hash g√©n√©r√©:', hashedPassword);

        // Mettre √† jour l'utilisateur admin
        const [updatedRows] = await User.update(
            { password_hash: hashedPassword },
            { where: { email: 'admin@konipa.com' } }
        );

        if (updatedRows > 0) {
            console.log('‚úÖ Mot de passe admin mis √† jour avec succ√®s');

            // V√©rifier que la mise √† jour a fonctionn√©
            const user = await User.findOne({ where: { email: 'admin@konipa.com' } });
            if (user) {
                const isValid = await bcrypt.compare(newPassword, user.password_hash);
                console.log('üîê V√©rification du nouveau mot de passe:', isValid ? '‚úÖ VALIDE' : '‚ùå INVALIDE');
            }
        } else {
            console.log('‚ùå Aucun utilisateur trouv√© pour la mise √† jour');
        }

    } catch (error) {
        console.error('‚ùå Erreur lors de la mise √† jour:', error);
    } finally {
        await sequelize.close();
    }
}

updateAdminPassword();
