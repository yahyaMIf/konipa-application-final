const { sequelize, User, Client, Order, Category, Brand, Product } = require('../models');
const { seedUsers } = require('./userSeeder');
const { seedClients } = require('./clientSeeder');
const { seedOrders } = require('./orderSeeder');
const { seedProducts } = require('./productSeeder');

const runSeeders = async () => {
  try {
    console.log('üå± D√©marrage du seeding de la base de donn√©es...');
    
    // V√©rifier la connexion √† la base de donn√©es
    await sequelize.authenticate();
    console.log('‚úÖ Connexion √† la base de donn√©es √©tablie.');
    
    // Synchroniser les tables dans l'ordre des d√©pendances
    await User.sync({ alter: true });
    console.log('‚úÖ Synchronisation de la table users termin√©e.');
    
    await Client.sync({ alter: true });
    console.log('‚úÖ Synchronisation de la table clients termin√©e.');
    
    await Category.sync({ alter: true });
    console.log('‚úÖ Synchronisation de la table categories termin√©e.');
    
    await Brand.sync({ alter: true });
    console.log('‚úÖ Synchronisation de la table brands termin√©e.');
    
    await Product.sync({ alter: true });
    console.log('‚úÖ Synchronisation de la table products termin√©e.');
    
    await Order.sync({ alter: true });
    console.log('‚úÖ Synchronisation de la table orders termin√©e.');
    
    // Ex√©cuter les seeders dans l'ordre des d√©pendances
    await seedUsers();
    await seedClients();
    await seedProducts();
    await seedOrders();
    
    console.log('üéâ Seeding termin√© avec succ√®s!');
    process.exit(0);
    
  } catch (error) {
    console.error('‚ùå Erreur lors du seeding:', error);
    process.exit(1);
  }
};

// Ex√©cuter le seeding si ce fichier est appel√© directement
if (require.main === module) {
  runSeeders();
}

module.exports = { runSeeders };