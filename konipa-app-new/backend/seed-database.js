const { sequelize } = require('./models');
const { seedUsers } = require('./seeders/userSeeder');
const { seedClients } = require('./seeders/clientSeeder');
const { seedProducts } = require('./seeders/productSeeder');
const { seedOrders } = require('./seeders/orderSeeder');

const seedDatabase = async () => {
    try {
        console.log('üå± D√©marrage du seeding de la base de donn√©es...');

        // Synchroniser la base de donn√©es
        console.log('üîÑ Synchronisation de la base de donn√©es...');
        await sequelize.sync({ force: true });
        console.log('‚úÖ Base de donn√©es synchronis√©e');

        // Seeder les utilisateurs
        console.log('üë• Seeding des utilisateurs...');
        await seedUsers();

        // Seeder les clients
        console.log('üè¢ Seeding des clients...');
        await seedClients();

        // Seeder les produits
        console.log('üì¶ Seeding des produits...');
        await seedProducts();

        // Seeder les commandes
        console.log('üõí Seeding des commandes...');
        await seedOrders();

        console.log('üéâ Seeding termin√© avec succ√®s!');
        console.log('üìä Donn√©es de test cr√©√©es:');
        console.log('   - Utilisateurs (admin, comptabilit√©, comptoir, repr√©sentant, clients)');
        console.log('   - Clients avec limites de cr√©dit');
        console.log('   - Produits avec stocks');
        console.log('   - Commandes avec diff√©rents statuts');

    } catch (error) {
        console.error('‚ùå Erreur lors du seeding:', error);
        throw error;
    } finally {
        await sequelize.close();
    }
};

// Ex√©cuter le seeding si le script est appel√© directement
if (require.main === module) {
    seedDatabase()
        .then(() => {
            console.log('‚úÖ Script de seeding termin√©');
            process.exit(0);
        })
        .catch((error) => {
            console.error('‚ùå Erreur fatale:', error);
            process.exit(1);
        });
}

module.exports = { seedDatabase };
